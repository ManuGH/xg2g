name: Container Security Scanning

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'Dockerfile'
      - 'transcoder/Dockerfile'
      - '.github/workflows/container-security.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'Dockerfile'
      - 'transcoder/Dockerfile'
      - '.github/workflows/container-security.yml'
  schedule:
    # Run daily at 2 AM UTC to catch new vulnerabilities
    - cron: '0 2 * * *'
  workflow_dispatch:

permissions:
  contents: read
  security-events: write
  pull-requests: write

jobs:
  scan-go-image:
    name: Scan Go Daemon Container
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Go daemon image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: false
          load: true
          tags: xg2g:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: xg2g:${{ github.sha }}
          format: 'sarif'
          output: 'trivy-go-results.sarif'
          severity: 'CRITICAL,HIGH,MEDIUM'
          vuln-type: 'os,library'
          ignore-unfixed: false

      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-go-results.sarif'
          category: 'container-go-daemon'

      - name: Run Trivy for PR comment
        uses: aquasecurity/trivy-action@master
        if: github.event_name == 'pull_request'
        with:
          image-ref: xg2g:${{ github.sha }}
          format: 'table'
          output: 'trivy-go-table.txt'
          severity: 'CRITICAL,HIGH'
          exit-code: '0'

      - name: Comment PR with Go scan results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v8
        with:
          script: |
            const fs = require('fs');
            const output = fs.readFileSync('trivy-go-table.txt', 'utf8');

            const comment = `## ðŸ”’ Container Security Scan: Go Daemon

            <details>
            <summary>Trivy Vulnerability Report</summary>

            \`\`\`
            ${output}
            \`\`\`

            </details>

            _Scanned image: \`xg2g:${{ github.sha }}\`_
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

      - name: Fail on critical vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: xg2g:${{ github.sha }}
          format: 'table'
          severity: 'CRITICAL'
          exit-code: '1'
          ignore-unfixed: true

  scan-rust-transcoder:
    name: Scan Rust Transcoder Container
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Rust transcoder image
        uses: docker/build-push-action@v6
        with:
          context: ./transcoder
          file: ./transcoder/Dockerfile
          push: false
          load: true
          tags: xg2g-transcoder:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: xg2g-transcoder:${{ github.sha }}
          format: 'sarif'
          output: 'trivy-rust-results.sarif'
          severity: 'CRITICAL,HIGH,MEDIUM'
          vuln-type: 'os,library'
          ignore-unfixed: false

      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-rust-results.sarif'
          category: 'container-rust-transcoder'

      - name: Run Trivy for PR comment
        uses: aquasecurity/trivy-action@master
        if: github.event_name == 'pull_request'
        with:
          image-ref: xg2g-transcoder:${{ github.sha }}
          format: 'table'
          output: 'trivy-rust-table.txt'
          severity: 'CRITICAL,HIGH'
          exit-code: '0'

      - name: Comment PR with Rust scan results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v8
        with:
          script: |
            const fs = require('fs');
            const output = fs.readFileSync('trivy-rust-table.txt', 'utf8');

            const comment = `## ðŸ”’ Container Security Scan: Rust Transcoder

            <details>
            <summary>Trivy Vulnerability Report</summary>

            \`\`\`
            ${output}
            \`\`\`

            </details>

            _Scanned image: \`xg2g-transcoder:${{ github.sha }}\`_
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

      - name: Fail on critical vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: xg2g-transcoder:${{ github.sha }}
          format: 'table'
          severity: 'CRITICAL'
          exit-code: '1'
          ignore-unfixed: true

  scan-image-configuration:
    name: Scan Image Configuration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Go daemon image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: false
          load: true
          tags: xg2g:${{ github.sha }}

      - name: Run Trivy config scanner on Go image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: xg2g:${{ github.sha }}
          scan-type: 'config'
          format: 'table'
          output: 'trivy-config-go.txt'
          exit-code: '0'

      - name: Build Rust transcoder image
        uses: docker/build-push-action@v6
        with:
          context: ./transcoder
          file: ./transcoder/Dockerfile
          push: false
          load: true
          tags: xg2g-transcoder:${{ github.sha }}

      - name: Run Trivy config scanner on Rust image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: xg2g-transcoder:${{ github.sha }}
          scan-type: 'config'
          format: 'table'
          output: 'trivy-config-rust.txt'
          exit-code: '0'

      - name: Upload configuration scan results
        uses: actions/upload-artifact@v5
        if: always()
        with:
          name: trivy-config-reports
          path: |
            trivy-config-go.txt
            trivy-config-rust.txt
          retention-days: 30

  scan-filesystem:
    name: Scan Filesystem for Secrets
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy filesystem scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-fs-results.sarif'
          severity: 'CRITICAL,HIGH'
          scanners: 'secret,misconfig'

      - name: Upload filesystem scan to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-fs-results.sarif'
          category: 'filesystem-secrets'

  generate-sbom:
    name: Generate and Scan SBOMs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Go daemon image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: false
          load: true
          tags: xg2g:${{ github.sha }}

      - name: Generate SBOM for Go image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: xg2g:${{ github.sha }}
          format: 'cyclonedx'
          output: 'sbom-go.json'
          scan-type: 'image'

      - name: Build Rust transcoder image
        uses: docker/build-push-action@v6
        with:
          context: ./transcoder
          file: ./transcoder/Dockerfile
          push: false
          load: true
          tags: xg2g-transcoder:${{ github.sha }}

      - name: Generate SBOM for Rust image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: xg2g-transcoder:${{ github.sha }}
          format: 'cyclonedx'
          output: 'sbom-rust.json'
          scan-type: 'image'

      - name: Upload SBOMs
        uses: actions/upload-artifact@v5
        with:
          name: container-sboms
          path: |
            sbom-go.json
            sbom-rust.json
          retention-days: 90

      - name: Scan Go SBOM for vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'sbom'
          input: 'sbom-go.json'
          format: 'table'
          severity: 'CRITICAL,HIGH'
          exit-code: '0'

      - name: Scan Rust SBOM for vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'sbom'
          input: 'sbom-rust.json'
          format: 'table'
          severity: 'CRITICAL,HIGH'
          exit-code: '0'
