name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write
  packages: write
  id-token: write  # for cosign OIDC

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # GoReleaser needs full history

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache: true

      # =============================================
      # Pre-Release Checks
      # =============================================
      - name: Run tests
        run: go test ./... -race -count=1 -timeout=10m

      - name: Run go vet
        run: go vet ./...

      - name: Verify modules
        run: go mod verify

      # =============================================
      # Build Binaries with GoReleaser
      # =============================================
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # =============================================
      # Build and Push Multi-Arch Container Images
      # =============================================
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        id: build-push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # =============================================
      # Sign Container Images with Cosign
      # =============================================
      - name: Install Cosign
        uses: sigstore/cosign-installer@v3

      - name: Sign container image
        env:
          DIGEST: ${{ steps.build-push.outputs.digest }}
          TAGS: ${{ steps.meta.outputs.tags }}
        run: |
          echo "Signing ${TAGS}@${DIGEST}"
          cosign sign --yes \
            -a "repo=${{ github.repository }}" \
            -a "workflow=${{ github.workflow }}" \
            -a "ref=${{ github.sha }}" \
            "${TAGS}@${DIGEST}"

      # =============================================
      # Generate and Attest SBOM
      # =============================================
      - name: Install Syft
        uses: anchore/sbom-action/download-syft@v0

      - name: Generate SBOM
        run: |
          syft packages . \
            -o spdx-json \
            --file dist/sbom.spdx.json

      - name: Attest SBOM to image
        env:
          DIGEST: ${{ steps.build-push.outputs.digest }}
          TAGS: ${{ steps.meta.outputs.tags }}
        run: |
          echo "Attesting SBOM to ${TAGS}@${DIGEST}"
          cosign attest --yes \
            --predicate dist/sbom.spdx.json \
            --type spdx \
            "${TAGS}@${DIGEST}"

      # =============================================
      # Upload SBOM to Release
      # =============================================
      - name: Upload SBOM to release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/sbom.spdx.json

      # =============================================
      # Scan for Vulnerabilities
      # =============================================
      - name: Scan image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ steps.build-push.outputs.digest }}
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

      # =============================================
      # Notify on Success
      # =============================================
      - name: Summary
        run: |
          echo "## Release Summary :rocket:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Tag**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Images**: ${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Digest**: ${{ steps.build-push.outputs.digest }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Signed**: ✅" >> $GITHUB_STEP_SUMMARY
          echo "- **SBOM**: ✅" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Verification Commands" >> $GITHUB_STEP_SUMMARY
          echo '```bash' >> $GITHUB_STEP_SUMMARY
          echo "# Verify signature" >> $GITHUB_STEP_SUMMARY
          echo "cosign verify ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ steps.build-push.outputs.digest }} \\" >> $GITHUB_STEP_SUMMARY
          echo "  --certificate-oidc-issuer https://token.actions.githubusercontent.com \\" >> $GITHUB_STEP_SUMMARY
          echo "  --certificate-identity-regexp '^https://github.com/${{ github.repository }}'" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "# Verify SBOM attestation" >> $GITHUB_STEP_SUMMARY
          echo "cosign verify-attestation ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ steps.build-push.outputs.digest }} \\" >> $GITHUB_STEP_SUMMARY
          echo "  --type spdx \\" >> $GITHUB_STEP_SUMMARY
          echo "  --certificate-oidc-issuer https://token.actions.githubusercontent.com \\" >> $GITHUB_STEP_SUMMARY
          echo "  --certificate-identity-regexp '^https://github.com/${{ github.repository }}'" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
