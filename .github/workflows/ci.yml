name: CI

on:
  push:
  pull_request:

permissions:
  id-token: write
  contents: read

jobs:
  build-test-integration:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
          cache: true

      - name: Build project
        run: |
          go mod download
          go build -v ./...

      - name: Run unit tests
        run: go test -v ./...

      - name: Start OpenWebIF stub server
        run: |
          nohup go run ./test/stub_openwebif.go > /tmp/stub_openwebif.log 2>&1 &
          # wait for the stub to be ready (longer wait to avoid flakes)
          for i in {1..60}; do nc -z 127.0.0.1 18080 && break || sleep 0.5; done
          nc -z 127.0.0.1 18080

      - name: "Integration: build daemon and run refresh"
        id: integration
        env:
          XG2G_DATA: ./data
          XG2G_OWI_BASE: http://127.0.0.1:18080
          XG2G_BOUQUET: Premium
          XG2G_XMLTV: ./data/guide.xml
          XG2G_PICON_BASE: http://127.0.0.1:18080/picon
        run: |
          set -euo pipefail
          mkdir -p ./data
          go build -o bin/xg2g ./cmd/daemon

          # Start daemon in background and wait for it to accept connections
          nohup ./bin/xg2g > /tmp/daemon.log 2>&1 &
          DAEMON_PID=$!

          for i in {1..60}; do
            if curl -fsS http://127.0.0.1:34400/api/status >/dev/null 2>&1; then
              break
            fi
            sleep 0.5
          done

          # Trigger API refresh
          curl -fsS -X POST http://127.0.0.1:34400/api/refresh

          # Give the daemon a moment to finish writing files
          sleep 1

          ls -lh ./data/playlist.m3u ./data/guide.xml || true

          # Stop daemon
          kill $DAEMON_PID || true

      - name: Validate output files
        if: always()
        run: |
          set -euo pipefail
          # show stub and daemon logs for easier debugging
          echo '--- /tmp/stub_openwebif.log ---'
          sed -n '1,200p' /tmp/stub_openwebif.log || true
          echo '--- /tmp/daemon.log ---'
          sed -n '1,200p' /tmp/daemon.log || true

          test "$(grep -c '^#EXTINF' ./data/playlist.m3u)" -ge 2
          test "$(grep -c '<channel ' ./data/guide.xml)" -ge 2
          ! grep -q 'FROM BOUQUET' ./data/playlist.m3u

      - name: Upload logs as artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ci-logs
          path: |
            /tmp/stub_openwebif.log
            /tmp/daemon.log
            ./data/playlist.m3u
            ./data/guide.xml

      - name: Install golangci-lint
        run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest

      - name: Lint
        run: $(go env GOPATH)/bin/golangci-lint run ./...

      - name: Test
        run: go test ./... -v
