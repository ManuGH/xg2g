# xg2g Configuration Example
#
# This file demonstrates all available configuration options.
# Copy this file to config.yaml and customize for your setup.
#
# Configuration precedence: ENV variables > config.yaml > defaults
#
# To use this config:
#   ./xg2g-daemon --config config.yaml

# Application version (read-only, informational)
version: "dev"

# Data directory for storing playlists, XMLTV files, and logs
# ENV: XG2G_DATA
dataDir: "./data"

# Logging level: debug, info, warn, error
# ENV: XG2G_LOG_LEVEL
logLevel: "info"

# OpenWebIF Configuration (Enigma2 Receiver)
openWebIF:
  # Base URL of your Enigma2 receiver (required)
  # ENV: XG2G_OWI_BASE
  baseUrl: "http://192.168.1.100:80"

  # Optional authentication
  # ENV: XG2G_OWI_USERNAME, XG2G_OWI_PASSWORD
  username: ""
  password: ""

  # HTTP timeout for OpenWebIF requests
  # ENV: XG2G_OWI_TIMEOUT_MS
  timeout: "10s"

  # Number of retries for failed requests
  # ENV: XG2G_OWI_MAX_RETRIES
  retries: 3

  # Initial backoff delay between retries
  # ENV: XG2G_OWI_BACKOFF_MS
  backoff: "500ms"

  # Maximum backoff delay (exponential backoff cap)
  # ENV: XG2G_OWI_MAX_BACKOFF_MS
  maxBackoff: "30s"

  # Stream port (usually 8001 for Enigma2)
  # ENV: XG2G_STREAM_PORT
  streamPort: 8001

# Bouquet Selection
# Specify which bouquets to include in the generated playlist
# If empty or omitted, all bouquets are included
# ENV: XG2G_BOUQUET_REFS (comma-separated)
bouquets:
  - "1:7:1:0:0:0:0:0:0:0:FROM BOUQUET \"userbouquet.favourites.tv\" ORDER BY bouquet"
  - "1:7:1:0:0:0:0:0:0:0:FROM BOUQUET \"userbouquet.dbe01.tv\" ORDER BY bouquet"
  # Add more bouquet references as needed

# Electronic Program Guide (EPG) Configuration
epg:
  # Enable EPG data collection and XMLTV generation
  # ENV: XG2G_EPG_ENABLED
  enabled: true

  # Number of days of EPG data to fetch (1-7)
  # ENV: XG2G_EPG_DAYS
  days: 3

  # Maximum concurrent EPG requests (1-10)
  # Higher values = faster but more load on receiver
  # ENV: XG2G_EPG_MAX_CONCURRENCY
  maxConcurrency: 3

  # Timeout for individual EPG requests in milliseconds
  # ENV: XG2G_EPG_TIMEOUT_MS
  timeoutMs: 30000

  # Number of retries for failed EPG requests
  # ENV: XG2G_EPG_RETRIES
  retries: 2

  # Maximum Levenshtein distance for fuzzy channel matching (0-5)
  # 0 = exact match only, higher = more lenient matching
  # ENV: XG2G_EPG_FUZZY_MAX
  fuzzyMax: 2

  # Output path for XMLTV file (relative to dataDir)
  # ENV: XG2G_EPG_XMLTV_PATH
  xmltvPath: "xmltv.xml"

# API Server Configuration
api:
  # Bearer token for API authentication (leave empty to disable)
  # Generate a secure token: openssl rand -hex 32
  # ENV: XG2G_API_TOKEN
  token: ""

  # API server listen address
  # ENV: XG2G_API_ADDR
  listenAddr: ":8080"

# Prometheus Metrics Configuration
metrics:
  # Enable Prometheus metrics endpoint
  # ENV: XG2G_METRICS_ENABLED
  enabled: true

  # Metrics server listen address
  # ENV: XG2G_METRICS_ADDR
  listenAddr: ":9090"

# Picons (Channel Logos) Configuration
picons:
  # Base URL for channel logos/picons
  # Example: https://github.com/picons/picons/raw/master/picons
  # ENV: XG2G_PICONS_BASE
  baseUrl: ""

# ==============================================================================
# Advanced Configuration Examples
# ==============================================================================

# Example 1: Minimal configuration (OpenWebIF only)
# ---
# openWebIF:
#   baseUrl: "http://192.168.1.100:80"

# Example 2: Full EPG setup with authentication
# ---
# openWebIF:
#   baseUrl: "http://dreambox.local:80"
#   username: "admin"
#   password: "secret"
#   streamPort: 8001
# epg:
#   enabled: true
#   days: 7
#   maxConcurrency: 5
#   xmltvPath: "guide.xml"

# Example 3: Multiple bouquets with custom API token
# ---
# openWebIF:
#   baseUrl: "http://192.168.1.100:80"
# bouquets:
#   - "1:7:1:0:0:0:0:0:0:0:FROM BOUQUET \"favorites.tv\" ORDER BY bouquet"
#   - "1:7:1:0:0:0:0:0:0:0:FROM BOUQUET \"sports.tv\" ORDER BY bouquet"
# api:
#   token: "your-secure-token-here"
#   listenAddr: ":8080"
# metrics:
#   enabled: true
#   listenAddr: ":9090"

# Example 4: High-performance EPG collection
# ---
# openWebIF:
#   baseUrl: "http://192.168.1.100:80"
#   timeout: "30s"
#   retries: 5
#   maxBackoff: "60s"
# epg:
#   enabled: true
#   days: 7
#   maxConcurrency: 10
#   timeoutMs: 60000
#   retries: 3
#   fuzzyMax: 3

# ==============================================================================
# Environment Variable Reference
# ==============================================================================
#
# All configuration options can be overridden via environment variables:
#
# Application:
#   XG2G_DATA                    - Data directory path
#   XG2G_LOG_LEVEL               - Log level (debug, info, warn, error)
#
# OpenWebIF:
#   XG2G_OWI_BASE                - Base URL (REQUIRED)
#   XG2G_OWI_USERNAME            - Username for authentication
#   XG2G_OWI_PASSWORD            - Password for authentication
#   XG2G_OWI_TIMEOUT_MS          - Request timeout in milliseconds
#   XG2G_OWI_MAX_RETRIES         - Maximum retry attempts
#   XG2G_OWI_BACKOFF_MS          - Initial backoff delay in milliseconds
#   XG2G_OWI_MAX_BACKOFF_MS      - Maximum backoff delay in milliseconds
#   XG2G_STREAM_PORT             - Stream port number
#
# Bouquets:
#   XG2G_BOUQUET_REFS            - Comma-separated list of bouquet references
#
# EPG:
#   XG2G_EPG_ENABLED             - Enable EPG (true/false)
#   XG2G_EPG_DAYS                - Days of EPG data (1-7)
#   XG2G_EPG_MAX_CONCURRENCY     - Max concurrent requests (1-10)
#   XG2G_EPG_TIMEOUT_MS          - EPG request timeout in milliseconds
#   XG2G_EPG_RETRIES             - EPG retry attempts
#   XG2G_EPG_FUZZY_MAX           - Fuzzy match distance (0-5)
#   XG2G_EPG_XMLTV_PATH          - XMLTV output file path
#
# API:
#   XG2G_API_TOKEN               - Bearer token for API authentication
#   XG2G_API_ADDR                - API listen address
#
# Metrics:
#   XG2G_METRICS_ENABLED         - Enable Prometheus metrics (true/false)
#   XG2G_METRICS_ADDR            - Metrics listen address
#
# Picons:
#   XG2G_PICONS_BASE             - Base URL for channel logos
#
# ==============================================================================
# Usage Examples
# ==============================================================================
#
# 1. Using config file:
#    ./xg2g-daemon --config config.yaml
#
# 2. Using environment variables only:
#    XG2G_OWI_BASE=http://192.168.1.100:80 \
#    XG2G_EPG_ENABLED=true \
#    ./xg2g-daemon
#
# 3. Mixed (ENV overrides config file):
#    XG2G_EPG_DAYS=7 ./xg2g-daemon --config config.yaml
#
# 4. Check version:
#    ./xg2g-daemon --version
#
# ==============================================================================
# Troubleshooting
# ==============================================================================
#
# - If OpenWebIF connection fails, verify the baseUrl is accessible:
#     curl http://192.168.1.100:80/api/statusinfo
#
# - For EPG issues, check Enigma2 supports EPG API:
#     curl http://192.168.1.100:80/api/epgservice?sRef=REFERENCE
#
# - Enable debug logging for detailed information:
#     XG2G_LOG_LEVEL=debug ./xg2g-daemon --config config.yaml
#
# - Check metrics at: http://localhost:9090/metrics
#
# - API health check: curl http://localhost:8080/api/status
#
